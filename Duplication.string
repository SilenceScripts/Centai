-- This file was generated using Luraph Obfuscator v13.5.9

return(function(zQ,rQ,Pz,IQ,xQ,lQ,wQ,pQ,XQ,YQ,RQ,NQ,UQ,oQ,TQ,ez,iQ,mQ,jQ,VQ,FQ,tQ,CQ,BQ,MQ,KQ,yQ,GQ,bQ,AQ,QQ,gQ,hQ,uQ,LQ,ZQ,cQ,SQ,JQ,dQ,HQ,aQ,fQ,e,...)local k,v,s,kz,E,q,m=select,mQ,pcall,1,nil,nil,nil;while kz~=3 do if not(kz<=0x0000)then do if kz~=0X01 then m=string.char;kz=3;else E=rQ;kz=0;end;end;else q=wQ;kz=0X0002;end;end;local w=(TQ.gsub);local A=1;do kz=0x001;end;local X,l=nil,nil;do while kz<0X2 do do if kz~=0 then do X=lQ or fQ;end;do kz=0;end;else do l=oQ.insert;end;kz=2;end;end;end;end;local o=rawget;local L=(next);local Q=4294967296;kz=0;local C,O,f=nil,nil,nil;while kz~=0X4 do if not(kz<=0X1)then if kz==0X2 then f=LQ;do kz=4;end;else O=string.byte;kz=2;end;else if kz==0X0 then C=uQ.yield;kz=0x1;else do kz=0X3;end;end;end;end;local Z=(getfenv);kz=0x1;local g=nil;while kz<0X2 do if kz~=0 then g=(Z and Z()or dQ);do kz=0;end;else kz=2;end;end;local D=(tonumber);do kz=0X000;end;local WQ,j=nil,(nil);repeat if kz~=0X0 then j={1,7,6};kz=0x2;else do WQ={};end;kz=1;end;until kz>1;local p,r,d,h,I=nil,nil,nil,nil,(nil);for hx=0,4 do if not(hx<=1)then if not(hx<=0X2)then if hx==3 then else I=2^52;end;else d=FQ;end;else if hx~=0X0 then do r=XQ;end;else p=CQ;end;end;end;local H,J,x,W,B,K,G,M,z=nil,nil,nil,nil,nil,nil,nil,nil,nil;do for cS=0X0,10 do do if cS<=0X004 then do if cS<=1 then if cS~=0 then H=function()local Z7=nil;local a7=(0X2);do while(true)do do if not(a7<=0)then do if a7~=1 then do Z7=O(p,A,A);end;a7=0X1;else A=A+1;a7=0;end;end;else do return Z7;end;end;end;end;end;end;else do p=w(q(p,0X0005),".\046",function(m6)do if O(m6,0X2)~=ZQ then local TR=m(D(m6,gQ));if h then local SY=(r(TR,h));local oY=0;repeat if oY==0X00000 then do h=AQ;end;oY=0X1;else return SY;end;until(false);else return TR;end;else local MG=(0x0);repeat if MG==0x000 then h=D(q(m6,1,0x1));do MG=0X01;end;else return"";end;until(false);end;end;end);end;end;else if cS<=2 then do J=0X80000000;end;else do if cS==3 then do x=function()local Wn,Vn,Hn,gn=O(p,A,A+3);local En=(1);while(true)do if En==0 then return gn*16777216+Hn*65536+Vn*0X100+Wn;else A=A+0X004;do En=0X0;end;end;end;end;end;else W=pQ;end;end;end;end;end;elseif not(cS<=0X7)then do if not(cS<=0X008)then do if cS==9 then do local VB=nil;do for Fy=0,0X1 do if Fy~=0 then for y_=0X1,0X1f do local t_=(0);do while t_~=0X2 do do if t_==0x000 then do(G)[y_]=VB;end;t_=1;else VB=VB*0x2;t_=2;end;end;end;end;end;else VB=0X2;end;end;end;end;else z=function()local RL,hL,JL=1,nil,nil;repeat if not(RL<=0x00000)then if RL==0X01 then hL,JL=x(),x();RL=0X0;else return JL*Q+hL;end;else if not(JL>=J)then else JL=JL-Q;end;RL=2;end;until(false);end;end;end;else M=J-0X1;end;end;else if not(cS<=5)then do if cS==0X6 then K={[0]={[hQ]=0X0,0X1,2,3,4,5,0X6,7,HQ,9,10,11,0X0000c,0X000d,14,xQ},{[hQ]=1,0X0,3,2,0X5,4,7,6,0x00009,HQ,11,10,0X000d,0Xc,0XF,0X0e},{[0]=2,3,0X0,0X1,JQ,QQ,0X4,0X5,10,11,HQ,0X0009,14,15,12,0X00d},{[0]=0X0003,0X2,1,0X00,0X0007,6,0X00005,0x004,0Xb,10,IQ,0X8,15,14,13,12},{[0]=4,5,6,7,0,0X1,2,0X00003,0xc,0xd,0Xe,15,8,0X00009,0xa,0XB},{[0X0]=5,0X4,0X7,0x6,1,0X0,0x3,2,13,12,15,14,0X0009,HQ,0Xb,0X0A},{[0X0000]=6,7,0X00004,0X0005,0X002,3,0X000,1,14,0XF,BQ,13,10,0XB,8,0X9},{[0]=0x7,0x00006,5,4,3,MQ,0x1,0,0xF,14,13,0X000C,0XB,0X0A,9,8},{[0X0]=0X8,9,0X00a,GQ,12,0xd,0X0000e,15,0,1,MQ,3,RQ,5,0X6,0X0007},{[hQ]=0X09,0X8,11,0X00a,0Xd,0x00C,15,14,1,0,3,2,0x5,0X4,7,0x6},{[0X0]=0Xa,11,8,0x9,0x0E,0Xf,0x000C,0X0000D,0x2,3,0,zQ,0X6,7,4,YQ},{[0]=11,KQ,9,8,15,14,VQ,0Xc,3,2,1,hQ,7,6,0X5,0X0004},{[0X0]=12,VQ,0xe,15,HQ,9,0Xa,11,0X0004,0X5,6,0X07,0X0,1,2,3},{[hQ]=13,12,0X0F,14,0X00009,8,GQ,0XA,0X5,4,0x7,6,1,0,0X00003,2},{[0X00]=14,15,12,0x0d,KQ,GQ,8,0X9,0X6,0x0007,4,5,2,3,0X0,1},{[0]=15,0XE,0XD,0xC,0Xb,0X0A,0x9,0X8,0X00007,0X06,5,4,0X3,2,1,0X0}};else G={[0X0]=0X0001};end;end;else B=Q-0X00001;end;end;end;end;end;kz=1;local F,R=nil,(nil);while kz<0X02 do if kz==0 then do R=function(vD,CD,SD)local ED,FD=(vD/G[CD])%G[SD],1;repeat if FD~=0X0 then ED=ED-ED%0X01;FD=0x0;else return ED;end;until false;end;end;kz=2;else F=iQ;do kz=0;end;end;end;local Y=(function()local nv,Qv,Iv,Vv,Jv,kv=nil,nil,nil,nil,nil,(nil);local vv=(0X00008);repeat if not(vv<=0x3)then do if not(vv<=5)then if vv<=6 then Iv=(-1)^R(Qv,31,0X1);vv=0X00002;else if vv==0X7 then kv=R(Qv,0,20)*Q+nv;vv=0;else nv=x();do vv=5;end;end;end;else do if vv~=0X0004 then Qv=x();vv=0X4;else if not(nv==0 and Qv==0)then else return 0X0000;end;do vv=6;end;end;end;end;end;else if vv<=0x00001 then if vv~=0 then return Iv*(MQ^(Vv-0X3Ff))*(kv/I+Jv);else if Vv==0 then if kv~=0X0 then Vv=1;Jv=0;else return Iv*0X0;end;elseif Vv~=aQ then else if kv~=0 then return Iv*(1/0);else return Iv*(0/0X0);end;end;vv=1;end;else if vv~=2 then Jv=0X0001;vv=7;else Vv=R(Qv,0X014,11);vv=3;end;end;end;until(false);end);do kz=0x0;end;local vQ,V,sQ=nil,nil,nil;while kz<=2 do if not(kz<=0)then do if kz~=0X1 then V=(tQ or bit32);do kz=0X1;end;else sQ=function(...)return k(bQ,...),{...};end;do kz=0X00003;end;end;end;else vQ={};kz=2;end;end;local i=V and V.bxor or function(E3,K3)E3=E3%Q;local U3=(nil);local W3,C3=1,0x1;do repeat if C3~=0X0 then do K3=K3%Q;end;C3=0X0000;else U3=0;C3=0X2;end;until C3>0X1;end;for DM=0,0X1 do if DM~=0 then do return U3+E3*W3+K3*W3;end;else while E3>0 and K3>0 do local D0,I0=nil,(nil);local M0=1;while M0<6 do if M0<=0X2 then if M0<=0X0 then I0=K3%0x010;M0=3;elseif M0==0X01 then D0=E3%16;M0=0X0;else do E3=(E3-D0)/0X10;end;M0=5;end;else do if not(M0<=3)then if M0==0x4 then do W3=W3*16;end;M0=6;else K3=(K3-I0)/0X10;M0=4;end;else U3=U3+K[D0][I0]*W3;M0=2;end;end;end;end;end;end;end;end;local a=V and V[SQ]or function(oW,YW)local JW=(2);repeat if not(JW<=0)then if JW==0x001 then do YW=YW%Q;end;do JW=0X0;end;else oW=oW%Q;JW=1;end;else return((oW+YW)-i(oW,YW))/2;end;until(false);end;local t=V and V[yQ]or function(ct,tt)do ct=ct%Q;end;for sD=0X0,0X1 do if sD~=0X00 then return B-a(B-ct,B-tt);else tt=tt%Q;end;end;end;local y=V and V.rshift;local b=(V and V.bnot or function(NE)return B-(NE%Q);end);local S=V and V[jQ];do S=S or function(uA,PA)local qA=(0X001);while true do do if not(qA<=0X00000)then if qA~=1 then if PA<0 then return y(uA,-PA);end;qA=0X0;else if not(PA>=0X20)then else return 0x0;end;qA=2;end;else return(uA*G[PA])%Q;end;end;end;end;end;y=y or function(BW,UW)if UW>=0X20 then return 0X0;end;if not(UW<0)then else return S(BW,-UW);end;local EW=(nil);for hN=0x0,0X001 do if hN==0 then EW=(BW%Q/G[UW]);else return EW-EW%0X001;end;end;end;kz=0X01;local c,N=nil,(nil);repeat if kz==0x0 then N=function()local f2=0;local O2=0X0000;do while-0x76F82ab8 do local ot=(O(p,A,A));do A=A+0X1;end;do O2=t(O2,S(a(ot,0X7F),f2));end;do if a(ot,128)==0 then return O2;end;end;do f2=f2+0x007;end;end;end;end;break;else c={[2]=0X009,[0]=0X6,[5]=5,[0x6]=0x2,[7]=0x003,[0x002]=9,[1]=0X5,[MQ]=0,[0X5]=0X00004,[0X005]=0X9,[0]=0X1};kz=0;end;until(false);local eQ=H();local PQ=(H());local kQ,T=nil,nil;for M7=0X000,1 do if M7~=0X0000 then T=cQ;else kQ=function(f3)local i3,R3,l3,K3,N3,B3=0X0001,nil,nil,nil,nil,(nil);do while 0X0000222C768a do if not(i3<=0X003)then do if not(i3<=0X0005)then if i3==6 then A=A+RQ;i3=0X007;else return B3*0X1000000+N3*65536+K3*0X00100+l3;end;else do if i3==4 then l3=i(R3[0X01],PQ);do i3=0X00002;end;else do B3=i(R3[0x4],PQ);end;do i3=0X3;end;end;end;end;end;elseif i3<=0X1 then if i3~=0X00 then R3={O(p,A,A+0X3)};do i3=0x4;end;else N3=i(R3[3],PQ);i3=5;end;else if i3==2 then do K3=i(R3[0X002],PQ);end;i3=0;else PQ=(37*PQ+f3)%0X0000100;i3=0X6;end;end;end;end;end;end;end;local U=(function()local vh,qh=0X00002,nil;repeat if vh<=0X0 then do if qh>M then do return qh-Q;end;end;end;do vh=1;end;elseif vh==1 then return qh;else do qh=N();end;vh=0;end;until(false);end);local EQ,P=0X01,(assert);kz=0X4;local DQ,u,nQ,qQ,OQ=nil,nil,nil,nil,(nil);do while kz~=6 do do if kz<=2 then if not(kz<=0)then if kz==0X1 then function nQ(nG,lG,eG)local dG=(eG[0X2]);local KG=eG[0x00004];local wG,UG,GG,TG=eG[0X3],eG[0X0005],eG[0x09],(eG[0X006]);local IG=eG[0X1];local iG=eG[8];local mG=f({},{__mode="\118"});local DG=(nil);DG=function(...)local BS,dS=1,({});local aS=((Z and Z()or _ENV));local US,YS=sQ(...);local CS,WS=0,{[2]=eG,[0X1]=dS};US=US-0X1;local PS=((aS==g and nG or aS));for yM=0,US do if GG>yM then dS[yM]=YS[yM+0X1];else do break;end;end;end;if not iG then do YS=nil;end;else if not(dG)then else dS[GG]={n=US>=GG and US-GG+0X00001 or 0,X(YS,GG+1,US+0X00001)};end;end;if PS==aS then else do if not(F)then _ENV=PS;else F(DG,PS);end;end;end;local oS,bS,qS,FS=s(function()while 0.8001958937871433 do local MK=wG[BS];local XK=MK[4];do BS=BS+0X1;end;do if XK<45 then do if XK<0X016 then do if XK>=11 then if not(XK<16)then do if not(XK>=19)then if not(XK<0x011)then if XK==18 then local Bl=(MK[0X7]);local el=(d(function(...)(C)();for Hf,ef in...do(C)(true,Hf,ef);end;end));(el)(dS[Bl],dS[Bl+1],dS[Bl+2]);do CS=Bl;end;(dS)[Bl]=el;BS=MK[6];else do CS=MK[0X00007];end;(dS[CS])();CS=CS-1;end;else local rX=MK[7];local yX=(d(function(...)(C)();for HB in...do(C)(true,HB);end;end));yX(dS[rX],dS[rX+1],dS[rX+2]);do CS=rX;end;(dS)[rX]=yX;BS=MK[6];end;else if XK>=20 then if XK~=0X15 then dS[MK[7]]=WS[MK[6]];else local TV=MK[0X07];for lH=TV,TV+(MK[0X00006]-1)do do dS[lH]=YS[GG+(lH-TV)+1];end;end;end;else(dS)[MK[7]]=dS[MK[0x6]]+dS[MK[1]];end;end;end;else do if XK>=13 then if XK<14 then dS[MK[7]]=true;else if XK==15 then local tp=(MK[7]);(dS)[tp]=dS[tp](X(dS,tp+1,CS));do CS=tp;end;else local BO,xO=MK[7],(MK[6]);CS=BO+xO-1;repeat local gx,hx=mG,(dS);if not(#gx>0X0)then else local Fl=({});for Do,to in L,gx do for LC,BC in L,to do if BC[1]==hx and BC[0X2]>=0 then local Rz=BC[0X002];if not Fl[Rz]then(Fl)[Rz]={hx[Rz]};end;(BC)[0X01]=Fl[Rz];(BC)[2]=1;end;end;end;end;until true;return true,BO,xO;end;end;else if XK~=12 then(vQ)[MK[0X006]]=dS[MK[7]];else(dS)[MK[7]]=dS[MK[0X06]][dS[MK[0X01]]];end;end;end;end;else do if XK>=0X5 then if XK>=0X8 then if not(XK<0x9)then if XK==0XA then repeat local dM,SM=mG,dS;do if not(#dM>0X0)then else local sj={};do for V_,S_ in L,dM do for jo,Vo in L,S_ do if not(Vo[0X1]==SM and Vo[2]>=0X0000)then else local w1=Vo[2];do if not(not sj[w1])then else sj[w1]={SM[w1]};end;end;(Vo)[0X01]=sj[w1];(Vo)[0x2]=1;end;end;end;end;end;end;until true;local ZZ=(MK[7]);return false,ZZ,ZZ+MK[0X6]-0X2;else if dS[MK[6]]~=dS[MK[0X001]]then else BS=MK[7];end;end;else dS[MK[0X7]][dS[MK[6]]]=MK[5];end;else if XK>=6 then if XK~=0X007 then dS[MK[0X7]][MK[0X2]]=dS[MK[0X001]];else local rk=((MK[1]-1)*50);local Kk=(MK[7]);local Ok=dS[Kk];do for iI=1,CS-Kk do Ok[rk+iI]=dS[Kk+iI];end;end;end;else do if dS[MK[0X6]]<dS[MK[1]]then BS=MK[7];end;end;end;end;else if not(XK<2)then do if XK>=3 then if XK~=4 then dS[MK[7]]=dS[MK[0X00006]]%dS[MK[1]];else if MK[1]~=0X000af then dS[MK[7]]=-dS[MK[6]];else BS=BS-1;wG[BS]={[4]=25,[7]=(MK[7]-231),[0x00006]=(MK[6]-231)};end;end;else do dS[MK[0X007]]=dS[MK[0X0006]]==dS[MK[0X1]];end;end;end;else if XK~=0X1 then dS[MK[7]]=dS[MK[0X6]]-dS[MK[1]];else(dS)[MK[7]]=a(dS[MK[0X06]],dS[MK[1]]);end;end;end;end;end;end;else if XK<0x21 then if not(XK<0X01B)then if not(XK<30)then do if XK>=31 then if XK~=0X20 then do if dS[MK[0X6]]==MK[5]then else BS=MK[7];end;end;else local AH=(MK[0X07]);CS=AH+MK[6]-0x0001;dS[AH](X(dS,AH+1,CS));CS=AH-1;end;else do CS=MK[0X0007];end;do(dS)[CS]=dS[CS]();end;end;end;else do if XK>=28 then if XK~=29 then do dS[MK[7]]=dS[MK[0X6]]<dS[MK[1]];end;else for DS=MK[0X00007],MK[6]do dS[DS]=nil;end;end;else local tB=(MK[0X6]);do(dS)[MK[7]]=dS[tB]..dS[tB+1];end;end;end;end;else if not(XK<0x0018)then if XK<0X19 then local q0=MK[7];(dS)[q0]=dS[q0](dS[q0+1]);CS=q0;else if XK==26 then local MG=MK[0x00007];local bG,XG=dS[MG]();if not(bG)then else for dw=1,MK[1]do do(dS)[MG+dw]=XG[dw];end;end;BS=MK[0X00006];end;else if MK[0X1]~=0XAB then(dS)[MK[7]]=#dS[MK[0X006]];else BS=BS-0X1;(wG)[BS]={[0X06]=(MK[0X6]-0Xc3),[4]=0XA,[7]=(MK[0x7]-195)};end;end;end;else if XK==23 then if not(dS[MK[6]]<=dS[MK[0x0001]])then do BS=MK[0x7];end;end;else local JN=UG[MK[0X006]];local NN,YN=JN[0x0007],nil;local LN=(#NN);do if LN>0X0 then YN={};for Qz=0X01,LN do local nz=(NN[Qz]);if nz[1]==0X00 then do(YN)[Qz-1]={dS,nz[2]};end;else YN[Qz-0x1]=lG[nz[0x2]];end;end;l(mG,YN);end;end;(dS)[MK[0x7]]=nQ(PS,YN,JN);end;end;end;else if XK<0X27 then if XK>=0X24 then do if not(XK<37)then if XK==38 then(dS)[MK[7]]=dS[MK[6]]<=dS[MK[0X1]];else WS[MK[6]]=dS[MK[0X7]];end;else(dS)[MK[0X7]]=b(dS[MK[0X6]]);end;end;else if not(XK>=0X22)then(dS)[MK[0X7]]=dS[MK[6]]*dS[MK[1]];else if XK==0x000023 then local G_=dS[MK[6]]/dS[MK[1]];do(dS)[MK[0x7]]=G_-G_%0X001;end;else local nJ=lG[MK[0X6]];dS[MK[7]]=nJ[1][nJ[0x2]];end;end;end;else if not(XK>=0X2a)then if XK>=40 then if XK~=0X29 then do if not(not dS[MK[0X0007]])then else do BS=MK[0X6];end;end;end;else local c_=(MK[7]);local m_,y_=dS[c_]();do if m_ then do BS=MK[6];end;(dS)[c_+0X003]=y_;end;end;end;else(dS)[MK[7]]=dS[MK[0X00006]][MK[5]];end;else if XK>=0x2b then if XK==44 then if MK[0X001]==0X6D then BS=BS-0X1;wG[BS]={[0X6]=(MK[6]-0X0Da),[0X7]=(MK[0X0007]-218),[4]=0X4};elseif MK[0X0001]~=185 then repeat local rh,zh,fh=mG,dS,MK[0X00007];if#rh>0 then local KJ={};do for FA,KA in L,rh do do for IX,mX in L,KA do if not(mX[1]==zh and mX[2]>=fh)then else local Ko=(mX[0X00002]);do if not(not KJ[Ko])then else KJ[Ko]={zh[Ko]};end;end;mX[1]=KJ[Ko];mX[2]=0X1;end;end;end;end;end;end;until true;else BS=BS-1;wG[BS]={[6]=(MK[0X006]-5),[7]=(MK[0x00007]-5),[4]=0X0046};end;else repeat local Xg,Fg=mG,(dS);do if#Xg>0 then local vj={};for Y2,B2 in L,Xg do for z2,A2 in L,B2 do if A2[0X1]==Fg and A2[2]>=0X0 then local uD=A2[0x02];do if not(not vj[uD])then else do(vj)[uD]={Fg[uD]};end;end;end;(A2)[0X1]=vj[uD];(A2)[0X2]=1;end;end;end;end;end;until true;return true,MK[7],1;end;else repeat local Hg,ug=mG,(dS);do if not(#Hg>0x0)then else local Mu=({});do for Bm,Cm in L,Hg do do for G0,W0 in L,Cm do do if not(W0[1]==ug and W0[0X002]>=0X0)then else local nm=(W0[0X002]);if not Mu[nm]then Mu[nm]={ug[nm]};end;(W0)[1]=Mu[nm];do W0[0x002]=1;end;end;end;end;end;end;end;end;end;until true;do return true,MK[0X07],0;end;end;end;end;end;end;end;else if XK<0X43 then do if XK<0x38 then do if XK>=50 then do if XK<53 then if not(XK<0x0033)then if XK~=0x34 then if dS[MK[6]]~=MK[5]then else BS=MK[0X7];end;else do if not(MK[2]<=dS[MK[0X00001]])then BS=MK[7];end;end;end;else local Ot=(MK[7]);(dS[Ot])(dS[Ot+0X1],dS[Ot+2]);CS=Ot-1;end;else do if not(XK<54)then do if XK==55 then local v6=MK[7];(dS)[v6]=dS[v6](dS[v6+0x1],dS[v6+2]);CS=v6;else dS[MK[7]]=dS[MK[6]]^dS[MK[0X1]];end;end;else local EB,AB=MK[7],((MK[1]-0X1)*0X0032);local UB=dS[EB];for tK=0X1,MK[6]do(UB)[AB+tK]=dS[EB+tK];end;end;end;end;end;else do if not(XK>=47)then if XK~=46 then(dS)[MK[7]]=dS[MK[0X6]]~=MK[0X5];else if dS[MK[6]]<=dS[MK[1]]then BS=MK[0X00007];end;end;else if not(XK<48)then if XK==0X31 then(PS)[MK[2]]=dS[MK[7]];else dS[MK[0x7]]=not dS[MK[6]];end;else local oL=(lG[MK[6]]);do oL[0X1][oL[2]]=dS[MK[0x7]];end;end;end;end;end;end;else if not(XK>=0X03d)then do if not(XK<58)then if not(XK<0X3b)then if XK==60 then do(dS)[MK[0x007]]=dS[MK[6]]~=dS[MK[0X001]];end;else(dS)[MK[7]]=t(dS[MK[0X00006]],dS[MK[1]]);end;else BS=MK[0X006];end;else if XK==57 then local WI=(MK[7]);(dS[WI])(dS[WI+1]);CS=WI-0X1;else do dS[MK[7]]=dS[MK[0X6]]/dS[MK[0X00001]];end;end;end;end;else do if XK>=64 then if XK>=0X041 then do if XK==0x42 then local HN=MK[0X7];local LN=US-GG;if LN<0 then LN=-0X1;end;for E8=HN,HN+LN do(dS)[E8]=YS[GG+(E8-HN)+1];end;CS=HN+LN;else dS[MK[0x00007]]=MK[2];end;end;else do if dS[MK[0X6]]==dS[MK[1]]then else BS=MK[7];end;end;end;else if not(XK<62)then if XK~=63 then dS[MK[0X07]]=dS[MK[6]]>=dS[MK[1]];else if dS[MK[7]]then BS=MK[0X06];end;end;else(dS)[MK[7]]=dS[MK[6]]%MK[0x00005];end;end;end;end;end;end;else if not(XK<78)then if XK<84 then if XK<0X051 then if XK<79 then dS[MK[0X7]]=dS[MK[0X06]]>dS[MK[1]];else if XK~=80 then do dS[MK[0x7]]=MK[2];end;else dS[MK[7]]={};end;end;else if not(XK<0x52)then if XK~=0X00053 then(dS)[MK[0x7]]=vQ[MK[0X6]];else do dS[MK[7]]={X({},0X1,MK[6])};end;end;else(dS)[MK[7]]=false;end;end;else if not(XK>=87)then if XK<0X55 then local rH,eH=MK[7],(dS[MK[0X6]]);dS[rH+1]=eH;do dS[rH]=eH[MK[5]];end;else if XK==86 then local d9=(MK[0X7]);local J9=dS[d9+0X2];local F9=dS[d9];local U9=dS[d9+1];(dS)[d9]=d(function()do for Ca=F9,U9,J9 do(C)(true,Ca);end;end;end);BS=MK[0X00006];else do dS[MK[0X00007]]=i(dS[MK[0X06]],dS[MK[0X00001]]);end;end;end;else if XK>=88 then if XK==0X59 then local Sa=MK[0X7];local Ga,Ba=dS[Sa]();if Ga then do dS[Sa+1]=Ba;end;BS=MK[6];end;else dS[MK[7]][MK[0X2]]=MK[5];end;else if not(not(dS[MK[0X6]]<dS[MK[1]]))then else BS=MK[0X7];end;end;end;end;else do if XK<72 then if not(XK<0X00045)then if not(XK>=0X046)then if not(dS[MK[6]]<=MK[0x05])then BS=MK[0x00007];end;else do if XK==71 then if MK[0x1]==48 then BS=BS-0x1;(wG)[BS]={[4]=25,[7]=(MK[7]-0X0000A7),[6]=(MK[6]-167)};elseif MK[0X1]~=0XC3 then(dS)[MK[7]]=YS[GG+0X1];else BS=BS-0X1;(wG)[BS]={[6]=(MK[0X00006]-0X000B8),[7]=(MK[0X007]-0xb8),[4]=0X0048};end;else repeat local TS,ES=mG,dS;if not(#TS>0X0000)then else local Cy={};do for jl,wl in L,TS do for TL,GL in L,wl do if GL[1]==ES and GL[0X2]>=0X0 then local wx=GL[0x0002];do if not(not Cy[wx])then else Cy[wx]={ES[wx]};end;end;do GL[0X1]=Cy[wx];end;GL[0X00002]=1;end;end;end;end;end;until true;return false,MK[7],CS;end;end;end;else if XK==68 then if MK[1]==0X3a then BS=BS-1;(wG)[BS]={[0X00007]=(MK[0X7]-0X7d),[6]=(MK[6]-0X00007d),[4]=72};elseif MK[1]~=220 then repeat local kB,XB=mG,dS;if#kB>0X00 then local wk=({});for Aq,hq in L,kB do for uu,Nu in L,hq do if Nu[1]==XB and Nu[0X02]>=0X0 then local iy=Nu[2];if not wk[iy]then wk[iy]={XB[iy]};end;Nu[1]=wk[iy];Nu[2]=1;end;end;end;end;until true;return;else BS=BS-1;wG[BS]={[0X00007]=(MK[0X7]-0X0096),[0x4]=66,[6]=(MK[0x6]-0X000096)};end;else(dS[MK[7]])[dS[MK[0x0006]]]=dS[MK[1]];end;end;else if XK<75 then do if XK>=73 then if XK==74 then dS[MK[0X7]]=dS[MK[0X6]];else local ZS=MK[7];local XS,KS,lS=dS[ZS]();if not(XS)then else(dS)[ZS+1]=KS;(dS)[ZS+0X02]=lS;BS=MK[0X6];end;end;else do dS[MK[7]]=nil;end;end;end;else if not(XK<0X4C)then do if XK~=77 then dS[MK[0x7]]=PS[MK[0X2]];else local fk=MK[7];dS[fk](X(dS,fk+0X00001,CS));CS=fk-0X1;end;end;else local ov,Av=MK[0X07],MK[6];local zv=(MK[0X1]);if Av~=0X0 then CS=ov+Av-0X001;end;local iv,cv=nil,(nil);if Av~=0x1 then iv,cv=sQ(dS[ov](X(dS,ov+1,CS)));else iv,cv=sQ(dS[ov]());end;do if zv~=0X1 then if zv==0 then iv=iv+ov-0X1;CS=iv;else iv=ov+zv-2;CS=iv+1;end;local nU=0;for kU=ov,iv do nU=nU+1;(dS)[kU]=cv[nU];end;else CS=ov-1;end;end;end;end;end;end;end;end;end;end;end;end);if not(oS)then if W(bS)=='s\116ri\110\103'then if not(T(bS,'a\116t\101\109pt\032t\111\032\121\105\101l\100\032a\099ro\115s meta\109et\104\111d/\067\037-\099a\108l\032\098o\117nd\097r\121'))then else return coroutine.yield();end;if not(T(bS,'\094.-:%d+:\032'))then(v)(bS,0);else v("Luraph Script:"..(KG[BS-1]or"(internal)")..": "..E(bS),0X0);end;else v(bS,0X0);end;else do if bS then if FS==1 then return dS[qS]();else return dS[qS](X(dS,qS+1,CS));end;else if not(qS)then else return X(dS,qS,FS);end;end;end;end;end;if not(F)then else F(DG,nG);end;do return DG;end;end;kz=3;else kz=0X001;end;else OQ=qQ();kz=0X6;end;else do if not(kz<=3)then if kz~=0X4 then u=NQ;do kz=2;end;else do DQ=function(im)local um=0x0;local Rm,mm=nil,(nil);do while 1792099814 do do if um<=1 then if um==0X0 then Rm=x();um=1;else mm='';um=3;end;else if um==2 then do A=A+Rm;end;break;else do for iv=1,Rm,0X1F3d do local Kv,Av=nil,nil;local Fv=(2);while Fv~=0X00003 do if not(Fv<=0x0)then do if Fv==1 then Av={O(p,A+iv-0x0001,A+Kv-1)};Fv=3;else do Kv=iv+0X1F3D-1;end;Fv=0X000;end;end;else if not(Kv>Rm)then else Kv=Rm;end;do Fv=0X1;end;end;end;Fv=0;while(true)do if Fv~=0X0000 then mm=mm..m(X(Av));break;else for Jp=1,#Av do local kp=(0);while(true)do if kp~=0 then do eQ=(im*eQ+93)%0X0100;end;break;else Av[Jp]=i(Av[Jp],eQ);kp=1;end;end;end;Fv=0x00001;end;end;end;end;um=2;end;end;end;end;end;return mm;end;end;kz=0X005;end;else function qQ()local T1,w1,z1,W1=3,nil,nil,nil;repeat if T1<=2 then if not(T1<=0X00000)then do if T1~=1 then w1={nil,nil,{},{},{},AQ,nil,nil,AQ};T1=5;else W1=w1[0X3];do T1=6;end;end;end;else w1[0XC]=x();T1=1;end;else do if not(T1<=0X3)then if T1==0X00004 then(w1)[0x09]=N();T1=0;else z1={};T1=0X4;end;else T1=2;end;end;end;until T1>0X5;local o1=x()-0x16F8C;for AU=0X1,o1 do do(W1)[AU]={[0x05]=H(),[7]=U(),[0x02]=H(),[6]=U(),[3]=H(),[0X4]=N(),[1]=U()};end;end;local G1,h1,I1,J1=nil,nil,nil,(nil);for WH=0X000,0X5 do do if WH<=0X2 then if WH<=0X0 then G1=H();else if WH==0X1 then(w1)[8]=R(G1,0x00001,0X1)~=0x0;else h1={};end;end;else if WH<=0X03 then I1=0X1;else if WH~=0x4 then do J1=x()-70436;end;else w1[0X2]=R(G1,0x2,0X1)~=0;end;end;end;end;end;local Y1=H();do T1=1;end;local C1,a1=nil,(nil);repeat if T1~=0X0 then C1={};do T1=0X00000;end;else do a1=H()~=0;end;T1=2;end;until T1>1;T1=3;repeat if not(T1<=2)then if not(T1<=4)then if T1~=0X00005 then w1[0x000010]=H();T1=0X2;else for Cf=1,N()do(h1)[Cf]={H(),N()};end;T1=1;end;else if T1~=3 then for Ap=0x1,o1 do local Gp=(0X1);local Wp=nil;repeat do if Gp==0 then do for P4,b4 in Pz(j)do local n4=c[b4];local G4=Wp[n4];if G4==0X7 then local yt=C1[Wp[b4]];local ot=z1[yt];if not(ot)then else do(Wp)[n4]=ot[0x1];end;local ZR,GR=0,nil;while(true)do if ZR==0 then do GR=ot[0X00002];end;ZR=0X1;else GR[#GR+1]={Wp,n4};do break;end;end;end;end;elseif G4==10 then(Wp)[b4]=Ap+Wp[b4]+0X1;end;end;end;Gp=0X02;else Wp=w1[0X3][Ap];Gp=0;end;end;until Gp>1;end;do T1=0;end;else for ek=0X1,J1 do local Ik=(nil);local Ck=H();local Nk=(nil);for aC=0,5 do do if not(aC<=2)then do if not(aC<=3)then if aC~=4 then if a1 then for dP=0,0X1 do do if dP==0 then(WQ)[EQ]=Nk;else EQ=EQ+0X1;end;end;end;end;else do I1=I1+zQ;end;end;else(z1)[I1]=Nk;end;end;else if not(aC<=0x0)then if aC~=1 then Nk={Ik,{}};else do if Ck==0X00002C then Ik=z();elseif Ck==0X77 then Ik=false;elseif Ck==0x6A then Ik=Y();elseif Ck==120 then do Ik=UQ;end;elseif Ck==ez then Ik=q(DQ(Y1),x());elseif Ck==68 then Ik=Y();elseif Ck==187 then do Ik=q(DQ(Y1),H());end;elseif Ck==0X000B5 then do Ik=q(DQ(Y1),x());end;elseif Ck==0x00C1 then do Ik=q(DQ(Y1),0X00006);end;elseif Ck==0X35 then Ik=q(DQ(Y1),Y()+x());elseif Ck==40 then Ik=q(DQ(Y1),Y()+x());end;end;end;else do(C1)[ek-0X01]=I1;end;end;end;end;end;end;T1=6;end;end;else if T1<=0X00 then(w1)[7]=h1;T1=0X5;else if T1~=1 then do(w1)[zQ]=N();end;do T1=4;end;else w1[12]=x();do break;end;end;end;end;until false;local i1=w1[0X0005];local F1=(nil);for wJ=0x0,1 do do if wJ==0X0 then F1=x()-0X000EcDf;else for ex=0,F1-1 do(i1)[ex]=qQ();end;end;end;end;local c1=(nil);for h8=0,5 do if h8<=2 then if not(h8<=0)then if h8==1 then(w1)[14]=H();else c1=x();end;else do(w1)[10]=x();end;end;else if h8<=0X003 then for e6=0X01,c1 do local M6,Y6,c6,G6=0,nil,nil,(nil);repeat do if M6<=0X0 then Y6=x();M6=0X1;else if M6==0X1 then c6=x();M6=0x2;else G6=x();do M6=0x3;end;end;end;end;until M6==0x3;for iy=Y6,c6 do w1[0x00004][iy]=G6;end;end;else if h8~=0X004 then return w1;else(w1)[0X006]=N();end;end;end;end;end;kz=0;end;end;end;end;end;end;(vQ)[2]=WQ;WQ=nil;return nQ(g,nil,OQ)(...);end)(0X00001,tostring,ipairs,9,15,unpack,string.sub,type,string.rep,5,0X4,rawset,true,table,string,0X94,setfenv,error,'\108\115\104ift',0X00d,coroutine.wrap,bitx2,0XA,"b\111r",11,"#",nil,0X7,0X10,0,coroutine,setmetatable,72,string.match,"\098\097n\100",0X6,_ENV,8,2047,table.unpack,{48049,76245002,0X7dd36076,0xec33bB65,0X0081818EFC,0X805b374d,1040617413,0X3d5A1592,0X0000B6BC8D9},...);
